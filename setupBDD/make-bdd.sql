-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Utilisateur"
(
    "idUtilisateur" serial NOT NULL,
    nom character varying,
    prenom character varying,
    mail character varying,
    mdp character varying,
    adresse character varying,
    "Statut_idStatut" integer,
    PRIMARY KEY ("idUtilisateur")
);

CREATE TABLE IF NOT EXISTS public."Utilisateur_Utilisateur"
(
    "Utilisateur_idUtilisateur" integer NOT NULL,
    "Utilisateur_idAmi" integer NOT NULL,
    PRIMARY KEY ("Utilisateur_idAmi")
);

CREATE TABLE IF NOT EXISTS public."Message"
(
    "idMessage" serial NOT NULL,
    contenu character varying,
    PRIMARY KEY ("idMessage")
);

CREATE TABLE IF NOT EXISTS public."Utilisateur_Message"
(
    "Utilisateur_idUtilisateur" integer NOT NULL,
    "Message_idMessage" integer NOT NULL,
    PRIMARY KEY ("Utilisateur_idUtilisateur", "Message_idMessage")
);

CREATE TABLE IF NOT EXISTS public."Statut"
(
    "idStatut" serial NOT NULL,
    nom character varying,
    PRIMARY KEY ("idStatut")
);

CREATE TABLE IF NOT EXISTS public."Statut_Privilege"
(
    "Statut_idStatut" integer NOT NULL,
    "Privilege_idPrivilege" integer NOT NULL,
    PRIMARY KEY ("Statut_idStatut", "Privilege_idPrivilege")
);

CREATE TABLE IF NOT EXISTS public."Privilege"
(
    "idPrivilege" serial NOT NULL,
    type character varying,
    PRIMARY KEY ("idPrivilege")
);

CREATE TABLE IF NOT EXISTS public."Utilisateur_Notification"
(
    "Utilisateur_idUtilisateur" integer NOT NULL,
    "Notification_idNotification" integer NOT NULL,
    "idFichier" integer,
    "idMessage" integer,
    "idCommentaire" integer,
    PRIMARY KEY ("Utilisateur_idUtilisateur", "Notification_idNotification")
);

CREATE TABLE IF NOT EXISTS public."Notification"
(
    "idNotification" serial NOT NULL,
    contenu character varying,
    heure time without time zone,
    date date,
    PRIMARY KEY ("idNotification")
);

CREATE TABLE IF NOT EXISTS public."Dossier"
(
    "idDossier" serial NOT NULL,
    nom character varying,
    "dateCreation" date,
    etat character varying,
    "idUtilisateur" integer,
    PRIMARY KEY ("idDossier")
);

CREATE TABLE IF NOT EXISTS public."Fichier"
(
    "idFichier" serial NOT NULL,
    nom character varying,
    taille integer,
    type character varying,
    "dateCreation" date,
    etat character varying,
    "idDossier" integer,
    PRIMARY KEY ("idFichier")
);

CREATE TABLE IF NOT EXISTS public."Commentaire"
(
    "idCommentaire" serial NOT NULL,
    contenu character varying,
    date date,
    "idFichier" integer,
    PRIMARY KEY ("idCommentaire")
);

CREATE TABLE IF NOT EXISTS public."Dossier_Dossier"
(
    "Dossier_idParent" integer NOT NULL,
    "Dossier_idEnfant" integer NOT NULL,
    PRIMARY KEY ("Dossier_idParent")
);

ALTER TABLE IF EXISTS public."Utilisateur"
    ADD FOREIGN KEY ("Statut_idStatut")
    REFERENCES public."Statut" ("idStatut") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Utilisateur_Utilisateur"
    ADD FOREIGN KEY ("Utilisateur_idAmi")
    REFERENCES public."Utilisateur" ("idUtilisateur") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Utilisateur_Utilisateur"
    ADD FOREIGN KEY ("Utilisateur_idAmi")
    REFERENCES public."Utilisateur" ("idUtilisateur") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Utilisateur_Message"
    ADD FOREIGN KEY ("Utilisateur_idUtilisateur")
    REFERENCES public."Utilisateur" ("idUtilisateur") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Utilisateur_Message"
    ADD FOREIGN KEY ("Message_idMessage")
    REFERENCES public."Message" ("idMessage") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Statut_Privilege"
    ADD FOREIGN KEY ("Statut_idStatut")
    REFERENCES public."Statut" ("idStatut") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Statut_Privilege"
    ADD FOREIGN KEY ("Privilege_idPrivilege")
    REFERENCES public."Privilege" ("idPrivilege") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Utilisateur_Notification"
    ADD FOREIGN KEY ("Utilisateur_idUtilisateur")
    REFERENCES public."Utilisateur" ("idUtilisateur") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Utilisateur_Notification"
    ADD FOREIGN KEY ("Notification_idNotification")
    REFERENCES public."Notification" ("idNotification") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Dossier"
    ADD FOREIGN KEY ("idUtilisateur")
    REFERENCES public."Utilisateur" ("idUtilisateur") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Fichier"
    ADD FOREIGN KEY ("idDossier")
    REFERENCES public."Dossier" ("idDossier") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Commentaire"
    ADD FOREIGN KEY ("idFichier")
    REFERENCES public."Fichier" ("idFichier") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Dossier_Dossier"
    ADD FOREIGN KEY ("Dossier_idParent")
    REFERENCES public."Dossier" ("idDossier") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Dossier_Dossier"
    ADD FOREIGN KEY ("Dossier_idParent")
    REFERENCES public."Dossier" ("idDossier") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;